//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Outsourcing_System.ComparisonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ComparisonService.IComparisonTasks")]
    public interface IComparisonTasks {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComparisonTasks/CovertParas", ReplyAction="http://tempuri.org/IComparisonTasks/CovertParasResponse")]
        string CovertParas(string txtCurrentPage, string txtSelectedLineHidden, bool upara, bool sapara, bool npara, string ddlSparaOrientation, string ddlSparaBackground, string ddlSparaType, string ddlSparaSubType, bool chkStanza, bool chkHasNumbers, string ddlHasStartNo, string ddlSign, string xmlPath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComparisonTasks/SaveText", ReplyAction="http://tempuri.org/IComparisonTasks/SaveTextResponse")]
        string SaveText(string txtCurrentPage, string txtSelectedLineHidden, string txtSelectedWordHidden, string newText, string xmlpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComparisonTasks/AddSection", ReplyAction="http://tempuri.org/IComparisonTasks/AddSectionResponse")]
        string AddSection(string type, int newlevel, string txtCurrentPage, string txtSelectedLineHidden, string xmlpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComparisonTasks/SplitOperation", ReplyAction="http://tempuri.org/IComparisonTasks/SplitOperationResponse")]
        string SplitOperation(string txtCurrentPage, string txtSelectedLineHidden, string xmlpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComparisonTasks/MergeOperation", ReplyAction="http://tempuri.org/IComparisonTasks/MergeOperationResponse")]
        string MergeOperation(string txtCurrentPage, string txtSelectedLineHidden, string xmlpath);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IComparisonTasks/AddLevels", ReplyAction="http://tempuri.org/IComparisonTasks/AddLevelsResponse")]
        string AddLevels(string type, int newlevel, string txtCurrentPage, string txtSelectedLineHidden, string xmlpath);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IComparisonTasksChannel : Outsourcing_System.ComparisonService.IComparisonTasks, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ComparisonTasksClient : System.ServiceModel.ClientBase<Outsourcing_System.ComparisonService.IComparisonTasks>, Outsourcing_System.ComparisonService.IComparisonTasks {
        
        public ComparisonTasksClient() {
        }
        
        public ComparisonTasksClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ComparisonTasksClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComparisonTasksClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ComparisonTasksClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CovertParas(string txtCurrentPage, string txtSelectedLineHidden, bool upara, bool sapara, bool npara, string ddlSparaOrientation, string ddlSparaBackground, string ddlSparaType, string ddlSparaSubType, bool chkStanza, bool chkHasNumbers, string ddlHasStartNo, string ddlSign, string xmlPath) {
            return base.Channel.CovertParas(txtCurrentPage, txtSelectedLineHidden, upara, sapara, npara, ddlSparaOrientation, ddlSparaBackground, ddlSparaType, ddlSparaSubType, chkStanza, chkHasNumbers, ddlHasStartNo, ddlSign, xmlPath);
        }
        
        public string SaveText(string txtCurrentPage, string txtSelectedLineHidden, string txtSelectedWordHidden, string newText, string xmlpath) {
            return base.Channel.SaveText(txtCurrentPage, txtSelectedLineHidden, txtSelectedWordHidden, newText, xmlpath);
        }
        
        public string AddSection(string type, int newlevel, string txtCurrentPage, string txtSelectedLineHidden, string xmlpath) {
            return base.Channel.AddSection(type, newlevel, txtCurrentPage, txtSelectedLineHidden, xmlpath);
        }
        
        public string SplitOperation(string txtCurrentPage, string txtSelectedLineHidden, string xmlpath) {
            return base.Channel.SplitOperation(txtCurrentPage, txtSelectedLineHidden, xmlpath);
        }
        
        public string MergeOperation(string txtCurrentPage, string txtSelectedLineHidden, string xmlpath) {
            return base.Channel.MergeOperation(txtCurrentPage, txtSelectedLineHidden, xmlpath);
        }
        
        public string AddLevels(string type, int newlevel, string txtCurrentPage, string txtSelectedLineHidden, string xmlpath) {
            return base.Channel.AddLevels(type, newlevel, txtCurrentPage, txtSelectedLineHidden, xmlpath);
        }
    }
}
